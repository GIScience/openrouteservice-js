!function(e,s){"object"==typeof exports&&"undefined"!=typeof module?module.exports=s():"function"==typeof define&&define.amd?define(s):(e="undefined"!=typeof globalThis?globalThis:e||self).OrsJsClient=s()}(this,(function(){"use strict";const e={defaultAPIVersion:"v2",defaultHost:"https://api.openrouteservice.org",missingAPIKeyMsg:"Please add your openrouteservice api_key..",baseUrlConstituents:["host","service","api_version","mime_type"],propNames:{apiKey:"api_key",host:"host",service:"service",apiVersion:"api_version",mimeType:"mime_type",profile:"profile",format:"format",timeout:"timeout"}};class s{fillArgs(e,s){return s={...e,...s}}saveArgsToCache(s){return{host:s[e.propNames.host],api_version:s[e.propNames.apiVersion],profile:s[e.propNames.profile],format:s[e.propNames.format],service:s[e.propNames.service],api_key:s[e.propNames.apiKey],mime_type:s[e.propNames.mimeType]}}prepareRequest(s){return delete s[e.propNames.mimeType],delete s[e.propNames.host],delete s[e.propNames.apiVersion],delete s[e.propNames.service],delete s[e.propNames.apiKey],delete s[e.propNames.profile],delete s[e.propNames.format],delete s[e.propNames.timeout],{...s}}prepareUrl(s){let t=s[e.propNames.host],r=[s[e.propNames.apiVersion],s[e.propNames.service],s[e.propNames.profile],s[e.propNames.format]];return r=r.join("/"),r=r.replace(/\/(\/)+/g,"/"),"/"===r[0]&&(r=r.slice(1)),"/"===r.slice(-1)[0]&&(r=r.slice(0,-1)),t=t+"/"+r,t}}const t=new s;class r{constructor(e){this.defaultArgs={},this.requestArgs={},this.argsCache=null,this.customHeaders={},this._setRequestDefaults(e)}_setRequestDefaults(s){if(this.defaultArgs[e.propNames.host]=e.defaultHost,s[e.propNames.host]&&(this.defaultArgs[e.propNames.host]=s[e.propNames.host]),s[e.propNames.service]&&(this.defaultArgs[e.propNames.service]=s[e.propNames.service]),!(e.propNames.apiKey in s))throw console.error(e.missingAPIKeyMsg),new Error(e.missingAPIKeyMsg);this.defaultArgs[e.propNames.apiKey]=s[e.propNames.apiKey]}checkHeaders(){this.requestArgs.customHeaders&&(this.customHeaders=this.requestArgs.customHeaders,delete this.requestArgs.customHeaders),"Content-type"in this.customHeaders||(this.customHeaders={...this.customHeaders,"Content-type":"application/json"})}async fetchRequest(s,r){let i=t.prepareUrl(this.argsCache);"pois"===this.argsCache[e.propNames.service]&&(i+=i.indexOf("?")>-1?"&":"?");const o={Authorization:this.argsCache[e.propNames.apiKey]};return await fetch(i,{method:"POST",body:JSON.stringify(s),headers:{...o,...this.customHeaders},signal:r.signal})}async createRequest(s){var t;const r=new AbortController,i=setTimeout((()=>r.abort("timed out")),this.defaultArgs[e.propNames.timeout]||5e3);try{const e=await this.fetchRequest(s,r);if(!e.ok){const s=new Error(e.statusText);throw s.status=e.status,s.response=e,s}return"gpx"===(null==(t=this.argsCache)?void 0:t.format)?await e.text():await e.json()}finally{clearTimeout(i)}}getBody(){return this.httpArgs}async calculate(e){this.requestArgs=e,this.checkHeaders(),this.requestArgs=t.fillArgs(this.defaultArgs,this.requestArgs),this.argsCache=t.saveArgsToCache(this.requestArgs),this.httpArgs=t.prepareRequest(this.requestArgs);const s=this.getBody(this.httpArgs);return await this.createRequest(s)}}const i=new s;const o=new s;const a=new s;const n=new s;const u={Geocode:class extends r{constructor(e){super(e),this.lookupParameter={api_key:function(e,s){return e+"="+s},text:function(e,s){return"&"+e+"="+encodeURIComponent(s)},focus_point:function(e,s){let t="";return t+="&focus.point.lon="+s[1],t+="&focus.point.lat="+s[0],t},boundary_bbox:function(e,s){let t="";return t+="&boundary.rect.min_lon="+s[0][1],t+="&boundary.rect.min_lat="+s[0][0],t+="&boundary.rect.max_lon="+s[1][1],t+="&boundary.rect.max_lat="+s[1][0],t},point:function(e,s){if(s&&Array.isArray(s.lat_lng)){let e="";return e+="&point.lon="+s.lat_lng[1],e+="&point.lat="+s.lat_lng[0],e}},boundary_circle:function(e,s){let t="";return t+="&boundary.circle.lon="+s.lat_lng[1],t+="&boundary.circle.lat="+s.lat_lng[0],t+="&boundary.circle.radius="+s.radius,t},sources:function(e,s){let t="&sources=";if(s){for(const e in s)Number(e)>0&&(t+=","),t+=s[e];return t}},layers:function(e,s){let t="&layers=",r=0;for(e in s)r>0&&(t+=","),t+=s[e],r++;return t},boundary_country:function(e,s){return"&boundary.country="+s},size:function(e,s){return"&"+e+"="+s},address:function(e,s){return"&"+e+"="+s},neighbourhood:function(e,s){return"&"+e+"="+s},borough:function(e,s){return"&"+e+"="+s},locality:function(e,s){return"&"+e+"="+s},county:function(e,s){return"&"+e+"="+s},region:function(e,s){return"&"+e+"="+s},postalcode:function(e,s){return"&"+e+"="+s},country:function(e,s){return"&"+e+"="+s}}}getParametersAsQueryString(s){let t="";for(const r in s){const i=s[r];e.baseUrlConstituents.indexOf(r)<=-1&&(t+=this.lookupParameter[r](r,i))}return t}async fetchGetRequest(e){let s=i.prepareUrl(this.requestArgs);return s+="?"+this.getParametersAsQueryString(this.requestArgs),await fetch(s,{method:"GET",headers:this.customHeaders,signal:e.signal})}async geocodePromise(){const s=new AbortController,t=setTimeout((()=>s.abort("timed out")),this.defaultArgs[e.propNames.timeout]||5e3);try{const e=await this.fetchGetRequest(s);if(!e.ok){const s=new Error(e.statusText);throw s.status=e.status,s.response=e,s}return await e.json()||e.text()}finally{clearTimeout(t)}}async geocode(s){return this.requestArgs=s,this.checkHeaders(),this.defaultArgs[e.propNames.service]||this.requestArgs[e.propNames.service]||(this.requestArgs.service="geocode/search"),this.requestArgs=i.fillArgs(this.defaultArgs,this.requestArgs),await this.geocodePromise()}async reverseGeocode(s){return this.requestArgs=s,this.checkHeaders(),this.defaultArgs[e.propNames.service]||this.requestArgs[e.propNames.service]||(this.requestArgs.service="geocode/reverse"),this.requestArgs=i.fillArgs(this.defaultArgs,this.requestArgs),await this.geocodePromise()}async structuredGeocode(s){return this.requestArgs=s,this.checkHeaders(),this.defaultArgs[e.propNames.service]||this.requestArgs[e.propNames.service]||(this.requestArgs.service="geocode/search/structured"),this.requestArgs=i.fillArgs(this.defaultArgs,this.requestArgs),await this.geocodePromise()}},Isochrones:class extends r{constructor(s){super(s),this.defaultArgs[e.propNames.service]||this.requestArgs[e.propNames.service]||(this.defaultArgs.service="isochrones"),s[e.propNames.apiVersion]||(this.defaultArgs.api_version=e.defaultAPIVersion)}getBody(e){const s={};return e.restrictions&&(s.profile_params={restrictions:{...e.restrictions}},delete e.restrictions),e.avoidables&&(s.avoid_features=[...e.avoidables],delete e.avoidables),e.avoid_polygons&&(s.avoid_polygons={...e.avoid_polygons},delete e.avoid_polygons),Object.keys(s).length>0?{...e,options:s}:{...e}}},Directions:class extends r{constructor(s){super(s),this.defaultArgs[e.propNames.service]||(this.defaultArgs[e.propNames.service]="directions"),s[e.propNames.apiVersion]||(this.defaultArgs.api_version=e.defaultAPIVersion)}getBody(e){return e.options&&"object"!=typeof e.options&&(e.options=JSON.parse(e.options)),e.restrictions&&(e.options=e.options||{},e.options.profile_params={restrictions:{...e.restrictions}},delete e.restrictions),e.avoidables&&(e.options=e.options||{},e.options.avoid_features=[...e.avoidables],delete e.avoidables),e}},Matrix:class extends r{constructor(s){super(s),this.defaultArgs[e.propNames.service]||this.requestArgs[e.propNames.service]||(this.defaultArgs[e.propNames.service]="matrix"),s[e.propNames.apiVersion]||(this.defaultArgs.api_version=e.defaultAPIVersion)}},Pois:class extends r{constructor(s){super(s),this.defaultArgs[e.propNames.service]||(this.defaultArgs[e.propNames.service]="pois")}generatePayload(s){const t={};for(const r in s)e.baseUrlConstituents.indexOf(r)>-1||r===e.propNames.apiKey||r===e.propNames.timeout||(t[r]=s[r]);return t}async poisPromise(){this.requestArgs.request=this.requestArgs.request||"pois",this.argsCache=o.saveArgsToCache(this.requestArgs),this.requestArgs[e.propNames.service]&&delete this.requestArgs[e.propNames.service];const s=this.generatePayload(this.requestArgs);return await this.createRequest(s)}async pois(e){return this.requestArgs=e,this.checkHeaders(),this.requestArgs=o.fillArgs(this.defaultArgs,this.requestArgs),await this.poisPromise()}},Elevation:class extends r{generatePayload(s){const t={};for(const r in s)e.baseUrlConstituents.indexOf(r)<=-1&&(t[r]=s[r]);return t}async elevationPromise(){this.argsCache=a.saveArgsToCache(this.requestArgs);const e=this.generatePayload(this.requestArgs);return await this.createRequest(e)}async lineElevation(s){return this.requestArgs=s,this.checkHeaders(),this.defaultArgs[e.propNames.service]||this.requestArgs[e.propNames.service]||(this.requestArgs[e.propNames.service]="elevation/line"),this.requestArgs=a.fillArgs(this.defaultArgs,this.requestArgs),await this.elevationPromise()}async pointElevation(s){return this.requestArgs=s,this.checkHeaders(),this.defaultArgs[e.propNames.service]||this.requestArgs[e.propNames.service]||(this.requestArgs[e.propNames.service]="elevation/point"),this.requestArgs=a.fillArgs(this.defaultArgs,this.requestArgs),await this.elevationPromise()}},Optimization:class extends r{generatePayload(s){let t={};for(const r in s)e.baseUrlConstituents.indexOf(r)<=-1&&(t[r]=s[r]);return t}async optimizationPromise(){this.argsCache=n.saveArgsToCache(this.requestArgs);const e=this.generatePayload(this.requestArgs);return await this.createRequest(e)}async optimize(s){return this.requestArgs=s,this.checkHeaders(),this.defaultArgs[e.propNames.service]||s[e.propNames.service]||(s[e.propNames.service]="optimization"),this.requestArgs=n.fillArgs(this.defaultArgs,this.requestArgs),await this.optimizationPromise()}}};return"object"==typeof module&&"object"==typeof module.exports?module.exports=u:"function"==typeof define&&define.amd&&define(u),"undefined"!=typeof window&&(window.Openrouteservice=u),u}));
//# sourceMappingURL=ors-js-client.umd.cjs.map
