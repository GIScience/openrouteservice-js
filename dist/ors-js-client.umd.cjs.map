{"version":3,"file":"ors-js-client.umd.cjs","sources":["../src/constants.js","../src/OrsUtil.js","../src/OrsBase.js","../src/OrsGeocode.js","../src/OrsPois.js","../src/OrsElevation.js","../src/OrsOptimization.js","../src/index.js","../src/OrsIsochrones.js","../src/OrsDirections.js","../src/OrsMatrix.js"],"sourcesContent":["const constants = {\n  defaultAPIVersion: 'v2',\n  defaultHost: 'https://api.openrouteservice.org',\n  missingAPIKeyMsg: 'Please add your openrouteservice api_key..',\n  baseUrlConstituents: ['host', 'service', 'api_version', 'mime_type'],\n  propNames: {\n    apiKey: 'api_key',\n    host: 'host',\n    service: 'service',\n    apiVersion: 'api_version',\n    mimeType: 'mime_type',\n    profile: 'profile',\n    format: 'format',\n    timeout: 'timeout'\n  }\n}\n\nexport default constants\n","import Constants from './constants.js'\nclass OrsUtil {\n  fillArgs(defaultArgs, requestArgs) {\n    requestArgs = {...defaultArgs, ...requestArgs}\n    return requestArgs\n  }\n\n  saveArgsToCache(args) {\n    return {\n      host: args[Constants.propNames.host],\n      api_version: args[Constants.propNames.apiVersion],\n      profile: args[Constants.propNames.profile],\n      format: args[Constants.propNames.format],\n      service: args[Constants.propNames.service],\n      api_key: args[Constants.propNames.apiKey],\n      mime_type: args[Constants.propNames.mimeType]\n    }\n  }\n\n  prepareRequest(args) {\n    delete args[Constants.propNames.mimeType]\n    delete args[Constants.propNames.host]\n    delete args[Constants.propNames.apiVersion]\n    delete args[Constants.propNames.service]\n    delete args[Constants.propNames.apiKey]\n    delete args[Constants.propNames.profile]\n    delete args[Constants.propNames.format]\n    delete args[Constants.propNames.timeout]\n    return { ...args }\n  }\n\n  /**\n   * Prepare the request url based on url constituents\n   * @param {Object} args\n   * @return {string} url\n   */\n  prepareUrl(args) {\n    let url = args[Constants.propNames.host]\n    let urlPathParts = [\n      args[Constants.propNames.apiVersion],\n      args[Constants.propNames.service],\n      args[Constants.propNames.profile],\n      args[Constants.propNames.format]\n    ]\n\n    urlPathParts = urlPathParts.join('/')\n    urlPathParts = urlPathParts.replace(/\\/(\\/)+/g, '/')\n\n    // The beginning and end of urlPathParts can not be a slash\n    if (urlPathParts[0] === '/') {\n      urlPathParts = urlPathParts.slice(1)\n    }\n    let end = urlPathParts.slice(-1)\n    if (end[0] === '/') {\n      urlPathParts = urlPathParts.slice(0, -1)\n    }\n\n    url = url + '/' + urlPathParts\n\n    return url\n  }\n}\n\nexport default OrsUtil\n","import OrsUtil from './OrsUtil.js'\nimport Constants from './constants.js'\n\nconst orsUtil = new OrsUtil()\n\nclass OrsBase {\n  constructor(args) {\n    this.defaultArgs = {}\n    this.requestArgs = {}\n    this.argsCache = null\n    this.customHeaders = {}\n\n    this._setRequestDefaults(args)\n  }\n\n  /**\n   * Set defaults for a request comparing with and overwriting default class arguments\n   * @param {Object} args - constructor input\n   */\n  _setRequestDefaults(args) {\n    this.defaultArgs[Constants.propNames.host] = Constants.defaultHost\n    if (args[Constants.propNames.host]) {\n      this.defaultArgs[Constants.propNames.host] = args[Constants.propNames.host]\n    }\n    if (args[Constants.propNames.service]) {\n      this.defaultArgs[Constants.propNames.service] = args[Constants.propNames.service]\n    }\n    if (Constants.propNames.apiKey in args) {\n      this.defaultArgs[Constants.propNames.apiKey] = args[Constants.propNames.apiKey]\n    } else {\n      // eslint-disable-next-line no-console\n      console.error(Constants.missingAPIKeyMsg)\n      throw new Error(Constants.missingAPIKeyMsg)\n    }\n\n  }\n\n  checkHeaders() {\n    // Get custom header and remove from args\n    if (this.requestArgs.customHeaders) {\n      this.customHeaders = this.requestArgs.customHeaders\n      delete this.requestArgs.customHeaders\n    }\n    // set default Content-type, since Postman sets Content-type to text/plain if not specified\n    if (!('Content-type' in this.customHeaders)) {\n      this.customHeaders = {...this.customHeaders, 'Content-type': 'application/json'}\n    }\n  }\n\n  async fetchRequest(body, controller) {\n    let url = orsUtil.prepareUrl(this.argsCache)\n    if (this.argsCache[Constants.propNames.service] === 'pois') {\n      url += url.indexOf('?') > -1 ? '&' : '?'\n    }\n\n    const authorization = {'Authorization': this.argsCache[Constants.propNames.apiKey]}\n\n    return await fetch(url, {\n      method: 'POST',\n      body: JSON.stringify(body),\n      headers: {...authorization, ...this.customHeaders},\n      signal: controller.signal\n    })\n  }\n\n  async createRequest(body) {\n    const controller = new AbortController()\n    const timeout = setTimeout(() => controller.abort('timed out'), this.defaultArgs[Constants.propNames.timeout] || 5000)\n\n    try {\n      const orsResponse = await this.fetchRequest(body, controller)\n\n      if (!orsResponse.ok) {\n        const error = new Error(orsResponse.statusText)\n        error.status = orsResponse.status\n        error.response = orsResponse\n        throw error\n      }\n\n      return this.argsCache?.format === 'gpx' ? await orsResponse.text() : await orsResponse.json()\n    } finally {\n      clearTimeout(timeout)\n    }\n  }\n\n  // is overidden in Directions and Isochrones class\n  getBody() {\n    return this.httpArgs;\n  }\n\n  async calculate(reqArgs) {\n    this.requestArgs = reqArgs\n\n    this.checkHeaders()\n\n    this.requestArgs = orsUtil.fillArgs(this.defaultArgs, this.requestArgs)\n\n    this.argsCache = orsUtil.saveArgsToCache(this.requestArgs)\n\n    this.httpArgs = orsUtil.prepareRequest(this.requestArgs)\n    const postBody = this.getBody(this.httpArgs)\n\n    return await this.createRequest(postBody)\n  }\n}\n\nexport default OrsBase\n","import OrsUtil from './OrsUtil.js'\nimport Constants from './constants.js'\nimport OrsBase from './OrsBase.js'\n\nconst orsUtil = new OrsUtil()\n\nclass OrsGeocode extends OrsBase {\n  constructor(args) {\n    super(args)\n\n    this.lookupParameter = {\n      api_key: function(key, val) {\n        return key + '=' + val\n      },\n      text: function(key, val) {\n        return '&' + key + '=' + encodeURIComponent(val)\n      },\n      focus_point: function(key, val) {\n        let urlParams = ''\n        urlParams += '&' + 'focus.point.lon' + '=' + val[1]\n        urlParams += '&' + 'focus.point.lat' + '=' + val[0]\n        return urlParams\n      },\n      boundary_bbox: function(key, val) {\n        let urlParams = ''\n        urlParams += '&' + 'boundary.rect.min_lon' + '=' + val[0][1]\n        urlParams += '&' + 'boundary.rect.min_lat' + '=' + val[0][0]\n        urlParams += '&' + 'boundary.rect.max_lon' + '=' + val[1][1]\n        urlParams += '&' + 'boundary.rect.max_lat' + '=' + val[1][0]\n\n        return urlParams\n      },\n      point: function(key, val) {\n        if (val && Array.isArray(val.lat_lng)) {\n          let urlParams = ''\n          urlParams += '&' + 'point.lon' + '=' + val.lat_lng[1]\n          urlParams += '&' + 'point.lat' + '=' + val.lat_lng[0]\n          return urlParams\n        }\n      },\n      boundary_circle: function(key, val) {\n        let urlParams = ''\n        urlParams += '&' + 'boundary.circle.lon' + '=' + val.lat_lng[1]\n        urlParams += '&' + 'boundary.circle.lat' + '=' + val.lat_lng[0]\n        urlParams += '&' + 'boundary.circle.radius' + '=' + val.radius\n\n        return urlParams\n      },\n      sources: function(key, val) {\n        let urlParams = '&sources='\n        if (val) {\n          for (const key in val) {\n            if (Number(key) > 0) {\n              urlParams += ','\n            }\n            urlParams += val[key]\n          }\n          return urlParams\n        }\n      },\n      layers: function(key, val) {\n        let urlParams = '&layers='\n        let counter = 0\n        for (key in val) {\n          if (counter > 0) {\n            urlParams += ','\n          }\n          urlParams += val[key]\n          counter++\n        }\n        return urlParams\n      },\n      boundary_country: function(key, val) {\n        return '&' + 'boundary.country' + '=' + val\n      },\n      size: function(key, val) {\n        return '&' + key + '=' + val\n      },\n      address: function(key, val) {\n        return '&' + key + '=' + val\n      },\n      neighbourhood: function(key, val) {\n        return '&' + key + '=' + val\n      },\n      borough: function(key, val) {\n        return '&' + key + '=' + val\n      },\n      locality: function(key, val) {\n        return '&' + key + '=' + val\n      },\n      county: function(key, val) {\n        return '&' + key + '=' + val\n      },\n      region: function(key, val) {\n        return '&' + key + '=' + val\n      },\n      postalcode: function(key, val) {\n        return '&' + key + '=' + val\n      },\n      country: function(key, val) {\n        return '&' + key + '=' + val\n      }\n    }\n  }\n\n  getParametersAsQueryString(args) {\n    let queryString = ''\n    for (const key in args) {\n      const val = args[key]\n      if (Constants.baseUrlConstituents.indexOf(key) <= -1) {\n        queryString += this.lookupParameter[key](key, val)\n      }\n    }\n    return queryString\n  }\n\n  async fetchGetRequest(controller) {\n    let url = orsUtil.prepareUrl(this.requestArgs)\n    // Add url query string from args\n    url += '?' + this.getParametersAsQueryString(this.requestArgs)\n\n    // createRequest function from base class is not applicable: GET instead of POST request\n    return await fetch(url, {\n      method: 'GET',\n      headers: this.customHeaders,\n      signal: controller.signal\n    })\n  }\n\n  async geocodePromise() {\n    const controller = new AbortController()\n    const timeout = setTimeout(() => controller.abort('timed out'), this.defaultArgs[Constants.propNames.timeout] || 5000)\n\n    try {\n      const orsResponse = await this.fetchGetRequest(controller)\n\n      if (!orsResponse.ok) {\n        const error = new Error(orsResponse.statusText)\n        error.status = orsResponse.status\n        error.response = orsResponse\n        throw error\n      }\n\n      return await orsResponse.json() || orsResponse.text()\n    } finally {\n      clearTimeout(timeout)\n    }\n  }\n\n  async geocode(reqArgs) {\n    this.requestArgs = reqArgs\n\n    this.checkHeaders()\n\n    if (!this.defaultArgs[Constants.propNames.service] && !this.requestArgs[Constants.propNames.service]) {\n      this.requestArgs.service = 'geocode/search'\n    }\n    this.requestArgs = orsUtil.fillArgs(this.defaultArgs, this.requestArgs)\n\n    return await this.geocodePromise()\n  }\n\n  async reverseGeocode(reqArgs) {\n    this.requestArgs = reqArgs\n\n    this.checkHeaders()\n\n    if (!this.defaultArgs[Constants.propNames.service] && !this.requestArgs[Constants.propNames.service]) {\n      this.requestArgs.service = 'geocode/reverse'\n    }\n    this.requestArgs = orsUtil.fillArgs(this.defaultArgs, this.requestArgs)\n\n    return await this.geocodePromise()\n  }\n\n  async structuredGeocode(reqArgs) {\n    this.requestArgs = reqArgs\n\n    this.checkHeaders()\n\n    if (!this.defaultArgs[Constants.propNames.service] && !this.requestArgs[Constants.propNames.service]) {\n      this.requestArgs.service = 'geocode/search/structured'\n    }\n    this.requestArgs = orsUtil.fillArgs(this.defaultArgs, this.requestArgs)\n\n    return await this.geocodePromise()\n  }\n}\n\nexport default OrsGeocode\n","import OrsUtil from './OrsUtil.js'\nimport Constants from './constants.js'\nimport OrsBase from './OrsBase.js'\n\nconst orsUtil = new OrsUtil()\n\nclass OrsPois extends OrsBase {\n  constructor(args) {\n    super(args);\n    if (!this.defaultArgs[Constants.propNames.service]) {\n      this.defaultArgs[Constants.propNames.service] = 'pois'\n    }\n  }\n\n  generatePayload(args) {\n    const payload = {}\n\n    for (const key in args) {\n      if (\n          !(\n              Constants.baseUrlConstituents.indexOf(key) > -1 ||\n              key === Constants.propNames.apiKey ||\n              key === Constants.propNames.timeout\n          )\n      ) {\n        payload[key] = args[key]\n      }\n    }\n    return payload\n  }\n\n  async poisPromise() {\n    // the request arg is required by the API as part of the body\n    this.requestArgs.request = this.requestArgs.request || 'pois'\n\n    this.argsCache = orsUtil.saveArgsToCache(this.requestArgs)\n\n    if (this.requestArgs[Constants.propNames.service]) {\n      delete this.requestArgs[Constants.propNames.service]\n    }\n\n    const payload = this.generatePayload(this.requestArgs)\n\n    return await this.createRequest(payload)\n  }\n\n  async pois(reqArgs) {\n    this.requestArgs = reqArgs\n\n    this.checkHeaders()\n\n    this.requestArgs = orsUtil.fillArgs(this.defaultArgs, this.requestArgs)\n\n    return await this.poisPromise()\n  }\n}\n\nexport default OrsPois\n","import OrsUtil from './OrsUtil.js'\nimport Constants from './constants.js'\nimport OrsBase from './OrsBase.js'\n\nconst orsUtil = new OrsUtil()\nclass OrsElevation extends OrsBase {\n\n  generatePayload(args) {\n    const payload = {}\n\n    for (const key in args) {\n      if (Constants.baseUrlConstituents.indexOf(key) <= -1) {\n        payload[key] = args[key]\n      }\n    }\n    return payload\n  }\n\n  async elevationPromise() {\n    this.argsCache = orsUtil.saveArgsToCache(this.requestArgs)\n\n    const payload = this.generatePayload(this.requestArgs)\n\n    return await this.createRequest(payload)\n  }\n\n  async lineElevation(reqArgs) {\n    this.requestArgs = reqArgs\n\n    this.checkHeaders()\n\n    if (!this.defaultArgs[Constants.propNames.service] && !this.requestArgs[Constants.propNames.service]) {\n      this.requestArgs[Constants.propNames.service] = 'elevation/line'\n    }\n    this.requestArgs = orsUtil.fillArgs(this.defaultArgs, this.requestArgs)\n\n    return await this.elevationPromise()\n  }\n\n  async pointElevation(reqArgs) {\n    this.requestArgs = reqArgs\n\n    this.checkHeaders()\n\n    if (!this.defaultArgs[Constants.propNames.service] && !this.requestArgs[Constants.propNames.service]) {\n      this.requestArgs[Constants.propNames.service] = 'elevation/point'\n    }\n    this.requestArgs = orsUtil.fillArgs(this.defaultArgs, this.requestArgs)\n\n    return await this.elevationPromise()\n  }\n}\n\nexport default OrsElevation\n","import OrsUtil from \"./OrsUtil.js\"\nimport Constants from \"./constants.js\"\nimport OrsBase from \"./OrsBase.js\"\n\nconst orsUtil = new OrsUtil()\n\nclass OrsOptimization extends OrsBase {\n  generatePayload(args) {\n    let payload = {}\n\n    for (const key in args) {\n      if (Constants.baseUrlConstituents.indexOf(key) <= -1) {\n        payload[key] = args[key]\n      }\n    }\n    return payload\n  }\n\n  async optimizationPromise() {\n    this.argsCache = orsUtil.saveArgsToCache(this.requestArgs)\n\n    const payload = this.generatePayload(this.requestArgs)\n\n    return await this.createRequest(payload)\n  }\n\n  async optimize(reqArgs) {\n    this.requestArgs = reqArgs\n\n    this.checkHeaders()\n\n    if (!this.defaultArgs[Constants.propNames.service] && !reqArgs[Constants.propNames.service]) {\n      reqArgs[Constants.propNames.service] = 'optimization'\n    }\n    this.requestArgs = orsUtil.fillArgs(this.defaultArgs, this.requestArgs)\n\n    return await this.optimizationPromise()\n  }\n}\n\nexport default OrsOptimization\n","import OrsGeocode from './OrsGeocode.js'\nimport OrsIsochrones from './OrsIsochrones.js'\nimport OrsMatrix from './OrsMatrix.js'\nimport OrsDirections from './OrsDirections.js'\nimport OrsPois from './OrsPois.js'\nimport OrsElevation from './OrsElevation.js'\nimport OrsOptimization from './OrsOptimization.js'\n\nconst Openrouteservice = {\n  Geocode: OrsGeocode,\n  Isochrones: OrsIsochrones,\n  Directions: OrsDirections,\n  Matrix: OrsMatrix,\n  Pois: OrsPois,\n  Elevation: OrsElevation,\n  Optimization: OrsOptimization\n}\n\n// Define Openrouteservice for Node module pattern loaders, including Browserify\nif (typeof module === 'object' && typeof module.exports === 'object') {\n  module.exports = Openrouteservice\n  // define Openrouteservice as an AMD module\n  // eslint-disable-next-line no-undef\n} else if (typeof define === 'function' && define.amd) {\n  // eslint-disable-next-line no-undef\n  define(Openrouteservice)\n}\n\nif (typeof window !== 'undefined') {\n  window.Openrouteservice = Openrouteservice\n}\n\nexport default Openrouteservice\n","import Constants from './constants.js'\nimport OrsBase from './OrsBase.js'\n\nclass OrsIsochrones extends OrsBase {\n  constructor(args) {\n    super(args);\n    if (!this.defaultArgs[Constants.propNames.service] && !this.requestArgs[Constants.propNames.service]) {\n      this.defaultArgs.service = 'isochrones'\n    }\n    if (!args[Constants.propNames.apiVersion]) {\n      this.defaultArgs.api_version = Constants.defaultAPIVersion\n    }\n  }\n\n  getBody(args) {\n    const options = {}\n\n    if (args.restrictions) {\n      options.profile_params = {\n        restrictions: {\n          ...args.restrictions\n        }\n      }\n      delete args.restrictions\n    }\n    if (args.avoidables) {\n      options.avoid_features = [...args.avoidables]\n      delete args.avoidables\n    }\n\n    if (args.avoid_polygons) {\n      options.avoid_polygons = {\n        ...args.avoid_polygons\n      }\n      delete args.avoid_polygons\n    }\n\n    if (Object.keys(options).length > 0) {\n      return {\n        ...args,\n        options: options\n      }\n    } else {\n      return {\n        ...args\n      }\n    }\n  }\n}\n\nexport default OrsIsochrones\n","import Constants from './constants.js'\nimport OrsBase from './OrsBase.js'\n\nclass OrsDirections extends OrsBase {\n  constructor(args) {\n    super(args);\n    if (!this.defaultArgs[Constants.propNames.service]) {\n      this.defaultArgs[Constants.propNames.service] = 'directions'\n    }\n    if (!args[Constants.propNames.apiVersion]) {\n      this.defaultArgs.api_version = Constants.defaultAPIVersion\n    }\n  }\n\n  getBody(args) {\n    if (args.options && typeof args.options !== 'object') {\n      args.options = JSON.parse(args.options)\n    }\n\n    if (args.restrictions) {\n      args.options = args.options || {}\n      args.options.profile_params = {\n        restrictions: { ...args.restrictions }\n      }\n      delete args.restrictions\n    }\n\n    if (args.avoidables) {\n      args.options = args.options || {}\n      args.options.avoid_features = [...args.avoidables]\n      delete args.avoidables\n    }\n    return args\n  }\n}\n\nexport default OrsDirections\n","import Constants from './constants.js'\nimport OrsBase from './OrsBase.js'\n\nclass OrsMatrix extends OrsBase {\n  constructor(args) {\n    super(args);\n    if (!this.defaultArgs[Constants.propNames.service] && !this.requestArgs[Constants.propNames.service]) {\n      this.defaultArgs[Constants.propNames.service] = 'matrix'\n    }\n    if (!args[Constants.propNames.apiVersion]) {\n      this.defaultArgs.api_version = Constants.defaultAPIVersion\n    }\n  }\n}\n\nexport default OrsMatrix\n"],"names":["constants","defaultAPIVersion","defaultHost","missingAPIKeyMsg","baseUrlConstituents","propNames","apiKey","host","service","apiVersion","mimeType","profile","format","timeout","OrsUtil","fillArgs","defaultArgs","requestArgs","saveArgsToCache","args","Constants","api_version","api_key","mime_type","prepareRequest","prepareUrl","url","urlPathParts","join","replace","slice","orsUtil","OrsBase","constructor","this","argsCache","customHeaders","_setRequestDefaults","console","error","Error","checkHeaders","async","body","controller","indexOf","authorization","Authorization","fetch","method","JSON","stringify","headers","signal","AbortController","setTimeout","abort","orsResponse","fetchRequest","ok","statusText","status","response","_a","text","json","clearTimeout","getBody","httpArgs","reqArgs","postBody","createRequest","Openrouteservice","Geocode","super","lookupParameter","key","val","encodeURIComponent","focus_point","urlParams","boundary_bbox","point","Array","isArray","lat_lng","boundary_circle","radius","sources","Number","layers","counter","boundary_country","size","address","neighbourhood","borough","locality","county","region","postalcode","country","getParametersAsQueryString","queryString","fetchGetRequest","geocodePromise","Isochrones","options","restrictions","profile_params","avoidables","avoid_features","avoid_polygons","Object","keys","length","Directions","parse","Matrix","Pois","generatePayload","payload","request","poisPromise","Elevation","elevationPromise","Optimization","optimizationPromise","module","exports","define","amd","window"],"mappings":"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"}